name: testGoApi

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

permissions:
  contents: read

env:
  SQLC_VERSION: '1.25.0'




jobs:
  create-env-file:
    runs-on: ubuntu-latest
    steps:
      - name: Read .env file
        id: set-env
        run: |
          touch .env
          echo PORT=8080 >> .env
          echo POSTGRESQL=${{ secrets.POSTGRESQL }} >> .env
          echo GOOSE_DRIVER=postgres >> .env
          echo GOOSE_DBSTRING=${{ secrets.POSTGRESQL }} >> .env
          echo GOOSE_MIGRATION_DIR=./internal/db/migrations >> .env
      - name: Upload .env file
        uses: actions/upload-artifact@v4
        with:
          name: env-file
          path: .env

  lint:
    needs: create-env-file
    strategy:
      matrix:
        go-version: [ '1.22.x' ]
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false
      - name: download .env file
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: .
      - uses: sqlc-dev/setup-sqlc@v4
        with:
           sqlc-version: ${{ env.SQLC_VERSION }}
      - run: make sqlc-lint
      - run: make generate
      - name: go internal linting mechanism
        run: make vet
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.57.1
#          args: --timeout=30m --config=${{ github.workspace }}/.golangci.yml --issues-exit-code=0
          skip-cache: true

  test:
    needs: [create-env-file]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.22.x' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: download .env file
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: .
      - uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: ${{ env.SQLC_VERSION }}
      - run: make generate
      - name: Install dependencies
        run: make install
      - name: Run tests
        run: make test

  build:
    needs: [lint, create-env-file]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.22.x' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: download .env file
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: .
      - name: Install dependencies
        run: make install
      - uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: ${{ env.SQLC_VERSION }}
      - run: make generate
      - name: Compile the binary
        run: make build_ci